// pages/blog.js
import React, { useEffect, useState } from "react";
import Head from "next/head";

import BlogCard from "@/components/BlogCard";
import styles from "../styles/BlogPage.module.css";

const BlogPage = ({ blogPosts, loading, error }) => {
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    setIsLoading(false);
  }, []);
  if (isLoading) {
    return <p style={{ color: "white" }}>Loading...</p>;
  }

  if (error) {
    return (
      <div
        style={{
          height: "100vh",
          display: "flex",
          justifyContent: "center",
          alignItems: "center",
        }}
      >
        <h3
          style={{
            color: "#fd5c63",
            padding: "10px",
          }}
        >
          {" "}
          Error: {error.message}
        </h3>
      </div>
    );
  }
  return (
    // <div className={styles.container}>
    <div>
      <Head>
        <title>iStream</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* <main className={styles.main}> */}

      <div className={styles.navbar}>
        <img
          style={{ width: "260px" }}
          src="https://wowtalent.live/wp-content/themes/wow/asset/img/logo.png"
          alt="companyLogo"
        />
        {/* <h1>WowTalent Blog</h1> */}
      </div>
      <main className={styles.container}>
        {/* Render blog posts */}
        <div className={styles.grid}>
          {blogPosts.map((post) => {
            return <BlogCard key={post.id} post={post} />;
          })}
        </div>
      </main>
    </div>
  );
};

export async function getServerSideProps() {
  let blogPosts = [];
  let error = null;
  let loading = true;

  try {
    const response = await fetch("https://wowtalent.live/wp-json/wp/v2/posts");
    console.log(typeof response.status);
    if (response.statusText === "OK" && response.status === 200) {
      const data = await response.json();
      blogPosts = data;
      loading = false;
    } else {
      error = { message: "The URL you are trying to use is not correct" };
      loading = false;
    }
  } catch (err) {
    error = { message: err.message };
    loading = false;
  }

  return {
    props: {
      blogPosts,
      loading,
      error,
    },
  };
}

export default BlogPage;
